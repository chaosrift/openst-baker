name: OpenST Multi-Stage Build

on:
  workflow_dispatch:
    inputs:
      board:
        description: 'Board name to build'
        required: true
        default: 'mp157a-dsi-rvt-emmc-mx'
        type: choice
        options:
          - mp157a-dsi-rvt-emmc-mx
          - mp157a-hdmi-lt-emmc-mx
          - mp157c-dk2
          - mp135f-dk

      runner:
        description: 'Specify the runner (e.g., ubuntu-latest, windows-latest, self-hosted-runner).'
        required: false
        type: choice
        default: 'ubuntu-latest'
        options:
          - ubuntu-latest
          - ubuntu-24.04
          - ubuntu-22.04
          - github-linux64-ubuntu-latest-8core  # Large GitHub-hosted runner
          - github-arm64-ubuntu-24.04-8core  # ARM64 self-hosted runner

env:
  RECIPE_REP: 'diverger/openst-yocto'
  RECIPE_REF: 'main'
  RECIPE_DIR: "."
  HASHFILES_ARGS: 'conf/local.conf conf/bblayers.conf meta-*/conf/layer.conf'

jobs:
  # Stage 1: Download sources and setup environment
  setup-sources:
    runs-on: ${{ inputs.runner }}
    timeout-minutes: 90
    outputs:
      build_dir: ${{ steps.setup.outputs.build_dir }}
    steps:
      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout build repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REP }}
          ref: ${{ env.RECIPE_REF }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_DIR }}

      - name: Setup and Fetch Sources
        id: setup
        uses: ./
        with:
          board: ${{ inputs.board }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          component: fetch-only

      - name: Cache Sources and DL_DIR
        uses: actions/cache/save@v4
        with:
          path: |
            st-yocto/downloads/
            st-yocto/sstate-cache/
            st-yocto/build-*/
          key: yocto-sources-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-${{ github.sha }}

  # Stage 2: Build toolchain and basic components
  build-toolchain:
    needs: setup-sources
    runs-on: ${{ inputs.runner }}
    timeout-minutes: 300  # 5 hours
    steps:
      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout build repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REP }}
          ref: ${{ env.RECIPE_REF }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_DIR }}

      - name: Restore Sources Cache
        uses: actions/cache/restore@v4
        with:
          path: |
            st-yocto/downloads/
            st-yocto/sstate-cache/
            st-yocto/build-*/
          key: yocto-sources-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-${{ github.sha }}
          restore-keys: |
            yocto-sources-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-
            yocto-sources-${{ inputs.board }}-${{ runner.os }}-

      - name: Build Toolchain and Core Components
        uses: ./
        with:
          board: ${{ inputs.board }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          component: toolchain

      - name: Cache Toolchain Build
        uses: actions/cache/save@v4
        with:
          path: |
            st-yocto/build-*/
            st-yocto/sstate-cache/
          key: yocto-toolchain-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-${{ github.sha }}


  # Stage 3a: Build kernel
  build-kernel:
    needs: build-toolchain
    runs-on: ${{ inputs.runner }}
    timeout-minutes: 360  # 6 hours
    outputs:
      deploy_images_dir: ${{ steps.build-kernel.outputs.deploy_images_dir }}

    steps:
      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout build repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REP }}
          ref: ${{ env.RECIPE_REF }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_DIR }}

      - name: Restore Sources Cache
        uses: actions/cache/restore@v4
        with:
          path: |
            st-yocto/downloads/
            st-yocto/sstate-cache/
            st-yocto/build-*/
          key: yocto-sources-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-${{ github.sha }}
          restore-keys: |
            yocto-sources-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-
            yocto-sources-${{ inputs.board }}-${{ runner.os }}-

      - name: Restore Toolchain Cache
        uses: actions/cache/restore@v4
        with:
          path: |
            st-yocto/build-*/
            st-yocto/sstate-cache/
          key: yocto-toolchain-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-${{ github.sha }}
          restore-keys: |
            yocto-toolchain-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-
            yocto-toolchain-${{ inputs.board }}-${{ runner.os }}-

      - name: Build Kernel
        id: build-kernel
        uses: ./
        with:
          board: ${{ inputs.board }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          component: kernel

      - name: Upload Kernel Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ inputs.board }}
          path: |
            ${{ steps.build-kernel.outputs.deploy_images_dir }}
          retention-days: 3

  # Stage 3b: Build bootloader
  build-bootloader:
    needs: build-toolchain
    runs-on: ${{ inputs.runner }}
    timeout-minutes: 360  # 6 hours
    outputs:
      deploy_images_dir: ${{ steps.build-bootloader.outputs.deploy_images_dir }}

    steps:
      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout build repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REP }}
          ref: ${{ env.RECIPE_REF }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_DIR }}

      - name: Restore Sources Cache
        uses: actions/cache/restore@v4
        with:
          path: |
            st-yocto/downloads/
            st-yocto/sstate-cache/
            st-yocto/build-*/
          key: yocto-sources-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-${{ github.sha }}
          restore-keys: |
            yocto-sources-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-
            yocto-sources-${{ inputs.board }}-${{ runner.os }}-

      - name: Restore Toolchain Cache
        uses: actions/cache/restore@v4
        with:
          path: |
            st-yocto/build-*/
            st-yocto/sstate-cache/
          key: yocto-toolchain-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-${{ github.sha }}
          restore-keys: |
            yocto-toolchain-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-
            yocto-toolchain-${{ inputs.board }}-${{ runner.os }}-

      - name: Build Bootloader
        id: build-bootloader
        uses: ./
        with:
          board: ${{ inputs.board }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          component: bootloader

      - name: Upload Bootloader Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bootloader-${{ inputs.board }}
          path: |
            ${{ steps.build-bootloader.outputs.deploy_images_dir }}
          retention-days: 3

  # Stage 4: Build final image (depends on both kernel and bootloader)
  build-final-image:
    needs: [build-kernel, build-bootloader, setup-sources]
    runs-on: ${{ inputs.runner }}
    timeout-minutes: 360  # 6 hours
    steps:
      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout build repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REP }}
          ref: ${{ env.RECIPE_REF }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_DIR }}

      - name: Restore Sources Cache
        uses: actions/cache/restore@v4
        with:
          path: |
            st-yocto/downloads/
            st-yocto/sstate-cache/
            st-yocto/build-*/
          key: yocto-sources-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-${{ github.sha }}
          restore-keys: |
            yocto-sources-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-
            yocto-sources-${{ inputs.board }}-${{ runner.os }}-

      - name: Restore Toolchain Cache
        uses: actions/cache/restore@v4
        with:
          path: |
            st-yocto/build-*/
            st-yocto/sstate-cache/
          key: yocto-toolchain-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-${{ github.sha }}
          restore-keys: |
            yocto-toolchain-${{ inputs.board }}-${{ runner.os }}-${{ hashFiles(env.HASHFILES_ARGS) }}-
            yocto-toolchain-${{ inputs.board }}-${{ runner.os }}-

      - name: Build Complete Image
        uses: ./
        with:
          board: ${{ inputs.board }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          component: image

      - name: Upload Final Image
        uses: actions/upload-artifact@v4
        with:
          name: stm32mp-image-${{ inputs.board }}
          path: |
            ${{ needs.setup-sources.outputs.build_dir }}/deploy/images/
          retention-days: 7
